name: Build UserService

on:
  push:
    branches:
      - main
      - 'releases/**'
    paths:
      - "UserService/**"
      - ".github/workflows/user-service-build.yml"
  pull_request:
    branches: 
      - main
      - dev
    paths:
      - "UserService/**"
      - ".github/workflows/user-service-build.yml"

env:
  PROJECT_PATH: 'UserService/UserService/UserService.csproj'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  F: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: 'Install dotnet'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: 'Restore packages'
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: 'Build project'
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

    - name: SonarCloud scan 
      uses: highbyte/sonarscan-dotnet@v2.1.2
      with:
        sonarProjectKey: syweerstra_S6-RYM-Clone
        sonarProjectName:  S6-RYM-Clone
        sonarOrganization: syweerstra
        dotnetBuildArguments: './UserService/UserService/UserService.csproj'
        dotnetTestArguments: './UserService.UnitTests/UserService.UnitTests.csproj'

    - name: Setup docker
      uses: docker/setup-buildx-action@v1

    - name: login to dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: build and push
      uses: docker/build-push-action@v2
      with:
       context: UserService
       file: UserService/Dockerfile
       push: true
       tags: ${{ secrets.DOCKERHUB_USERNAME }}/rymclone-userservice:latest
