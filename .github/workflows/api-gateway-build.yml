name: Build ApiGateway

on:
  push:
    branches:
      - main
      - 'releases/**'
    paths:
      - "ApiGateway/**"
      - ".github/workflows/api-gateway-build.yml"
  pull_request:
    branches: 
      - main
      - dev
    paths:
      - "ApiGateway/**"
      - ".github/workflows/api-gateway-build.yml"

env:
  PROJECT_PATH: 'ApiGateway/ApiGateway/ApiGateway.csproj'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY_NAME: 'rymcloneregistry'
  CLUSTER_NAME: 's6rymcluster'
  CLUSTER_RESOURCE_GROUP: 's6-rym-clone'
  NAMESPACE: 's6rymcloneservices'
  SECRET: 's6rymclonegeheimpje'
  APP_NAME: 's6RymClone'
# ff
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: 'Install dotnet'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: 'Restore packages'
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: 'Build project'
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
      
    - name: 'Test project'
      run: dotnet test

    
    - name: 'Azure container login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    # Container build and push to a Azure Container Registry (ACR)
    - run: |
        docker build . -t rymcloneregistry.azurecr.io/s6rymclone:${{ github.sha }}
        docker push rymcloneregistry.azurecr.io/s6rymclone:${{ github.sha }}
      working-directory: ./ApiGateway
      
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -
    
    # Create image pull secret for ACR
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}
        arguments: --force true
    
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          ./manifests/deployment.yaml
          ${{ github.workspace }}/manifests/service.yaml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}
